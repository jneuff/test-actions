name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags:
      - image@v*
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  long-running-test:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Long running test"
          sleep 30

  debug:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Event type: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Ref name: ${{ github.ref_name }}"


  only-commit:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - run: |
          echo "Only commit"


  only-tag:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - run: |
          echo "Only tag"

  only-tag-special:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'image@v')
    steps:
      - run: |
          echo "Only tag special"

  integration-test-reusable:
    uses: jneuff/test-actions/.github/workflows/reusable.yaml@${{ github.ref_name }}

  integration-test:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    steps:
      - id: step1
        run: echo "firstword=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT

  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      issues: write
    needs: ["integration-test"]
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - id: release-please
        uses: googleapis/release-please-action@v4
      - if: ${{ steps.release-please.outputs.release_created }}
        run: echo ${{ steps.release-please.outputs.tag_name }}
      - if: ${{ needs.integration-test.result }} == 'success'
        run: echo "integration tests pass"

  separate-job:
    runs-on: ubuntu-latest
    needs: ["integration-test", "release-please"]
    steps:
      - run: |
          echo "Separate job"
          echo ${{ toJson(needs.release-please.outputs) }}
      - if: ${{ needs.release-please.outputs.release_created }} && ${{ needs.integration-test.result }} == 'success'
        run: echo ${{ needs.release-please.outputs.tag_name }}

  # update-image-in-chart:
  #   needs: integration-test
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   env:
  #     GH_TOKEN: ${{ secrets.PAT_PR }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Open PR to update image in chart
  #       run: |
  #         git config --global user.email "nobody@example.com"
  #         git config --global user.name "github-actions[bot]"
  #         git fetch origin
  #         git switch -c image-tag-sha-${{ github.sha }}
  #         echo "image: sha-${{ github.sha }}" >> values.yaml
  #         git add values.yaml
  #         git commit -m "feat: update image tag to sha-${{ github.sha }}"
  #         git push origin image-tag-sha-${{ github.sha }}
  #         gh pr create --base main --head image-tag-sha-${{ github.sha }} --fill
  #         gh pr merge --auto --squash
