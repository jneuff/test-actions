name: Container Image Pipeline

# Goal: this pipeline should be triggered by push of changes to the container image

on:
  push:
    branches: [main]
    paths:
      - Containerfile
      - src/**
      - .github/workflows/container.yaml
  pull_request:
    branches: [main]
    paths:
      - Containerfile
      - src/**
      - .github/workflows/container.yaml

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  long-running-test:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Long running test"
          sleep 30

  debug:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Event type: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref type: ${{ github.ref_type }}"
          echo "Ref name: ${{ github.ref_name }}"

  integration-test-reusable:
    uses: jneuff/test-actions/.github/workflows/reusable.yaml@main

  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      issues: write
    needs: ["integration-test-reusable"]
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - id: release-please
        uses: googleapis/release-please-action@v4
      - if: ${{ steps.release-please.outputs.release_created }}
        run: echo ${{ steps.release-please.outputs.tag_name }}
      - if: ${{ needs.integration-test-reusable.result }} == 'success'
        run: echo "integration tests pass"

  update-image-in-chart:
    needs: integration-test-reusable
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ secrets.PAT_PR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Open PR to update image in chart
        run: |
          git config --global user.email "nobody@example.com"
          git config --global user.name "github-actions[bot]"
          git fetch origin
          git switch -c image-tag-sha-${{ github.sha }}
          echo "image: sha-${{ github.sha }}" >> values.yaml
          git add values.yaml
          git commit -m "deps: update image tag to sha-${{ github.sha }}"
          git push origin image-tag-sha-${{ github.sha }}
          gh pr create --base main --head image-tag-sha-${{ github.sha }} --fill
          gh pr merge --auto --squash
